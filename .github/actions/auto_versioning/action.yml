name: auto_versioning
description: use this action to get a latest tag of package
inputs:
  package:
    required: true
  segment:
    required: true
  previous:
    required: true
  description:
    default: ''
outputs:
  version:
    value: ${{ steps.versioning.outputs.semver }}
  assignee:
    value: ${{ steps.versioning.outputs.username }}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3

    - id: commit-info
      shell: bash
      run: |
        echo "hash=$(echo `git log -n 1 --pretty=format:%H` | cut -c -7)" >> $GITHUB_OUTPUT
        echo "username=$(echo `git log -n 1 --pretty=format:%an`)" >> $GITHUB_OUTPUT
        echo "email=$(echo `git log -n 1 --pretty=format:%ae`)" >> $GITHUB_OUTPUT

    - id: versioning
      shell: bash
      run: |
        version=$(echo ${{ inputs.previous }} | cut -d 'v' -f2)
        major=$(echo $version | cut -d '.' -f1 )
        minor=$(echo $version | cut -d '.' -f2 )
        patch=$(echo $version | cut -d '.' -f3 )

        if [[ ${{ inputs.segment }} == 'minor' ]]
        then
          new_version=$(echo v$major.$((minor+1)).0)
        elif [[ ${{ inputs.segment }} == 'patch' ]]
        then
          new_version=$(echo v$major.$minor.$((patch+1)))
        elif [[ ${{ inputs.segment }} == 'dev' ]]
        then
          new_version=$(echo dev-${{ steps.commit-info.outputs.hash }})
        else
          echo "Invalid segment provided. Supported segments are minor or patch."
          exit 1
        fi

        echo "new version: $new_version"
        echo "new_version=v$new_version" >> $GITHUB_OUTPUT

    - id: push-tags
      shell: bash
      run: |
        git config --global user.name "${{ steps.commit-info.outputs.username }}"
        git config --global user.email ${{  steps.commit-info.outputs.email }}
        git tag -a ${{ inputs.package }}/${{ steps.versioning.outputs.new_version }} -m "${{ inputs.description }}"
        git push origin --tags
