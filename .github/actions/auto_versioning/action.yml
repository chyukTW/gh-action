name: auto_versioning
description: use this action to get a latest tag of package
inputs:
  package:
    required: true
  segment:
    required: true
  previous:
    required: true

runs:
  using: composite
  steps:
    - uses: actions/checkout@v3

    - id: versioning
      shell: bash
      run: |
        version=$(echo ${{ inputs.previous }} | cut -d 'v' -f2)
        segments=(${version//./ })

        echo "segments: ${segments[@]}"

        if [[ ${{ inputs.segment }} == minor ]]
        then
          ((segments[1]++))
        elif [[ ${{ inputs.segment }} == patch ]]
        then
          ((segments[2]++))
        else
          echo "Invalid segment provided. Supported segments are minor or patch."
        fi

        echo "done if statement"

        new_version="v${segments[0]}.${segments[1]}.${segments[2]}"

        echo "new version: $new_version"

        echo "username=$(echo `git log -n 1 --pretty=format:%an`)" >> $GITHUB_OUTPUT
        echo "email=$(echo `git log -n 1 --pretty=format:%ae`)" >> $GITHUB_OUTPUT
        echo "semver=$new_version" >> $GITHUB_OUTPUT

    - id: push-tags
      shell: bash
      run: |
        git config --global user.name "${{ steps.versioning.outputs.username }}"
        git config --global user.email ${{  steps.versioning.outputs.email }}
        git tag -a ${{ inputs.package }}/${{ steps.versioning.outputs.semver }} -m "test tags"
        git push origin --tags
