name: versioning

on:
  pull_request:
    types:
      - closed

jobs:
  changes:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    outputs:
      lp: ${{ steps.filter.outputs.lp }}
      ts: ${{ steps.filter.outputs.ts }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            lp:
              - 'packages/lp/**'
            ts:
              - 'packages/ts/**'

  lp_versioning:
    needs: changes
    if: needs.changes.outputs.lp == 'true'
    runs-on: ubuntu-latest
    outputs:
      package: lp
      version: ${{ steps.update-patch.outputs.version }}
      assignee: ${{ steps.update-patch.outputs.assignee }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: get-latest-version
        uses: ./.github/actions/get_latest_version
        with:
          package: lp

      - id: update-dev
        if: github.ref_name == 'master' && contains(github.head_ref, 'feat')
        uses: ./.github/actions/auto_versioning
        with:
          package: lp
          segment: dev
          previous: ${{ steps.get-latest-version.outputs.version }}
          description: ${{ github.event.pull_request.title }}

      - id: update-patch
        if: contains(github.ref_name, 'lp') && contains(github.head_ref, 'fix')
        uses: ./.github/actions/auto_versioning
        with:
          package: lp
          segment: patch
          previous: ${{ steps.get-latest-version.outputs.version }}
          description: ${{ github.event.pull_request.title }}

      - name: Notion Versioning
        if: steps.update-patch.outcome == 'success' || steps.update-dev.outcome == 'success'
        uses: ./.github/actions/notion_versioning
        with:
          package: LP
          deployment: DEV
          version: ${{ steps.update-patch.outputs.new_version || steps.update-dev.outputs.new_version }}
          assignee: ${{ steps.update-patch.outputs.assignee || steps.update-dev.outputs.new_version }}
          description: ${{ github.event.pull_request.title }}

  ts_versioning:
    needs: changes
    if: needs.changes.outputs.ts == 'true'
    runs-on: ubuntu-latest
    outputs:
      package: ts
      version: ${{ steps.update-patch.outputs.version }}
      assignee: ${{ steps.update-patch.outputs.assignee }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: get-latest-version
        uses: ./.github/actions/get_latest_version
        with:
          package: ts

      - id: update-dev
        if: github.ref_name == 'master' && contains(github.head_ref, 'feat')
        uses: ./.github/actions/auto_versioning
        with:
          package: ts
          segment: dev
          previous: ${{ steps.get-latest-version.outputs.version }}
          description: ${{ github.event.pull_request.title }}

      - id: update-patch
        if: contains(github.ref_name, 'ts') && contains(github.head_ref, 'fix')
        uses: ./.github/actions/auto_versioning
        with:
          package: ts
          segment: patch
          previous: ${{ steps.get-latest-version.outputs.version }}
          description: ${{ github.event.pull_request.title }}

      - name: Notion Versioning
        if: steps.update-patch.outcome == 'success' || steps.update-dev.outcome == 'success'
        uses: ./.github/actions/notion_versioning
        with:
          package: TS
          deployment: DEV
          version: ${{ steps.update-patch.outputs.new_version || steps.update-dev.outputs.new_version }}
          assignee: ${{ steps.update-patch.outputs.assignee || steps.update-dev.outputs.new_version }}
          description: ${{ github.event.pull_request.title }}
